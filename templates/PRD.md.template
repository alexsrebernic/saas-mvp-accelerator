# Product Requirements Document - {{PROJECT_NAME}}

**√öltima actualizaci√≥n**: {{TIMESTAMP}}
**Status**: Draft
**Versi√≥n**: 1.0

---

## Elevator Pitch

[UNA DESCRIPCI√ìN DE 2-3 L√çNEAS QUE EXPLIQUE EL VALOR √öNICO DEL PRODUCTO]

Ejemplo: "{{PROJECT_NAME}} es una plataforma SaaS que permite a [USUARIO OBJETIVO] resolver [PROBLEMA] de manera [DIFERENCIADOR], reduciendo [M√âTRICA] en un X%."

---

## Problem Statement

### El Problema

[DESCRIPCI√ìN DETALLADA DEL PROBLEMA QUE RESUELVE]

**¬øPor qu√© es importante?**
- [Impacto econ√≥mico]
- [Impacto en productividad]
- [Impacto en experiencia del usuario]

### Impacto del Problema

- **P√©rdida de tiempo**: X horas/semana por usuario
- **Costo financiero**: $Y/mes en soluciones actuales
- **Frustraci√≥n del usuario**: [Descripci√≥n de pain points emocionales]

### Soluci√≥n Actual vs Nuestra Soluci√≥n

| Aspecto | Soluci√≥n Actual | Nuestra Soluci√≥n | Ventaja |
|---------|-----------------|------------------|---------|
| Tiempo  | Manual, lento   | Automatizado     | 10x m√°s r√°pido |
| Costo   | $X/mes          | $Y/mes           | 50% ahorro |
| UX      | Fragmentado     | Integrado        | Single source of truth |
| Setup   | Semanas         | Minutos          | Time to value |

---

## Target Audience

### Usuario Principal (Primary Persona)

**Nombre**: [Ejemplo: Mar√≠a, Product Manager]

**Demograf√≠a**:
- **Edad**: 28-45 a√±os
- **Ubicaci√≥n**: [Ciudad/Pa√≠s - ej: Buenos Aires, Argentina]
- **Industria**: [Ej: SaaS, E-commerce, Agencias]
- **Rol**: [Ej: Product Manager, Founder, Developer]
- **Tama√±o empresa**: [Ej: Startups 10-50 empleados]

**Caracter√≠sticas**:
- **Ingresos**: $[RANGO]
- **Tech Savviness**: Alto/Medio/Bajo
- **Idiomas**: Espa√±ol/Ingl√©s

**Pain Points Espec√≠ficos**:
1. [Pain point #1 - ej: "Pierde 5 horas/semana copiando datos entre sistemas"]
2. [Pain point #2]
3. [Pain point #3]

**Jobs to be Done**:
- **Funcional**: "Necesito [ACCI√ìN] para [RESULTADO]"
- **Emocional**: "Quiero sentirme [EMOCI√ìN] cuando [SITUACI√ìN]"
- **Social**: "Quiero que mi equipo/jefe vea que [PERCEPCI√ìN]"

**Quote representativa**:
> "Me frustra mucho que [PROBLEMA]. Desear√≠a poder [SOLUCI√ìN] de manera simple."

### Usuario Secundario (si aplica)

[REPETIR ESTRUCTURA PARA USUARIO SECUNDARIO]

---

## Unique Selling Proposition (USP)

### Diferenciador Principal

[¬øQU√â NOS HACE √öNICOS?]

**En una oraci√≥n**: {{PROJECT_NAME}} es el √∫nico [CATEGOR√çA] que [DIFERENCIADOR CLAVE].

### Ventajas Competitivas

1. **[Ventaja #1]**: Por qu√© importa y por qu√© otros no pueden hacerlo f√°cilmente
2. **[Ventaja #2]**: ...
3. **[Ventaja #3]**: ...

### Moat (Defensibilidad)

¬øQu√© construiremos para mantener la ventaja?
- [ ] Network effects
- [ ] Datos propietarios
- [ ] Switching costs
- [ ] Brand
- [ ] Otros: [especificar]

---

## Target Platforms

- **Web**: ‚úÖ Responsive, PWA-ready
- **Mobile Web**: ‚úÖ Optimizada para m√≥vil (no app nativa en MVP)
- **Desktop App**: ‚ùå Post-MVP
- **Mobile Native**: ‚ùå Post-MVP
- **API**: ‚úÖ REST API disponible

### Integraciones

- [INTEGRACI√ìN #1 - ej: Telegram Bot]
- [INTEGRACI√ìN #2 - ej: Slack]
- [INTEGRACI√ìN #3]

---

## Features List

### üî¥ P0 - Core MVP (Semana 1-2) - MUST HAVE

#### Autenticaci√≥n y Onboarding
- [ ] **Login con email/password**
  - [ ] Formulario de login
  - [ ] Validaci√≥n de credenciales
  - [ ] Manejo de errores
  - [ ] "Forgot password" flow

- [ ] **Registro de usuarios**
  - [ ] Formulario de signup
  - [ ] Verificaci√≥n de email
  - [ ] Terms & Conditions acceptance
  - [ ] Auto-login despu√©s de verificaci√≥n

- [ ] **Onboarding Flow (m√°x 3 pasos)**
  - [ ] Paso 1: [Ej: Configuraci√≥n de perfil]
  - [ ] Paso 2: [Ej: Primera acci√≥n clave]
  - [ ] Paso 3: [Ej: Invitar team members]
  - **Objetivo**: Time to value < 2 minutos

#### Feature Core #1: [NOMBRE DEL FEATURE PRINCIPAL]

**User Story**: Como [USUARIO], quiero [ACCI√ìN] para [BENEFICIO]

**Acceptance Criteria**:
- [ ] Criterio #1
- [ ] Criterio #2
- [ ] Criterio #3

**Technical Notes**:
- [Consideraciones t√©cnicas importantes]
- [Dependencias de APIs]
- [Edge cases a considerar]

#### Feature Core #2: [SEGUNDO FEATURE CR√çTICO]

[REPETIR ESTRUCTURA]

### üü° P1 - MVP Completo (Semana 3-4) - SHOULD HAVE

#### Dashboard B√°sico
- [ ] **M√©tricas principales**
  - [ ] [M√©trica #1 - ej: Total de usuarios]
  - [ ] [M√©trica #2 - ej: Actividad semanal]
  - [ ] [M√©trica #3 - ej: Items procesados]

- [ ] **Acciones r√°pidas**
  - [ ] [Acci√≥n #1 - ej: Crear nuevo proyecto]
  - [ ] [Acci√≥n #2 - ej: Invitar usuario]

- [ ] **Navegaci√≥n**
  - [ ] Sidebar con secciones principales
  - [ ] Header con user menu
  - [ ] Mobile-responsive navigation

#### Perfil y Settings
- [ ] **User Profile**
  - [ ] Ver y editar informaci√≥n personal
  - [ ] Cambiar password
  - [ ] Configurar notificaciones

### üü¢ P2 - Post-MVP (Mes 1-2) - NICE TO HAVE

#### Integraciones
- [ ] [Integraci√≥n #1]
- [ ] [Integraci√≥n #2]

#### Features Avanzadas
- [ ] [Feature avanzado #1]
- [ ] [Feature avanzado #2]

---

## UX/UI Considerations

### Design System
- **Base**: shadcn/ui components
- **Customizaci√≥n**: [Colores de marca, fonts personalizadas]
- **Dark Mode**: ‚úÖ Soporte desde d√≠a 1
- **Mobile First**: ‚úÖ Dise√±ar para m√≥vil primero

### Pantallas Principales

#### 1. Landing Page
**Objetivo**: Convertir visitantes en signups

**Secciones**:
- Hero con value proposition clara
- Social proof (testimonios, logos)
- Features principales (3-4)
- Pricing simple
- CTA claro y repetido

**Estados**:
- Default
- Loading
- Error

**Conversi√≥n objetivo**: 5% visitor ‚Üí signup

**A/B Tests planeados**:
- CTA copy
- Hero image
- Pricing display

#### 2. Login / Signup
**Objetivo**: Fricci√≥n m√≠nima para autenticarse

**Elementos**:
- Social login (Google, GitHub)
- Email/password fallback
- "Remember me" checkbox
- Forgot password link
- Switch entre login/signup

**Estados**:
- Default
- Loading
- Success
- Error (con mensajes espec√≠ficos)

#### 3. Onboarding Flow
**Objetivo**: Time to first value < 2 minutos

**Pasos**:
1. [Paso 1 - ej: "Configur√° tu perfil"]
2. [Paso 2 - ej: "Cre√° tu primer proyecto"]
3. [Paso 3 - ej: "Invit√° a tu equipo"]

**Puntos de fricci√≥n a evitar**:
- Pedir demasiada informaci√≥n upfront
- Pasos que no agregan valor inmediato
- Falta de progress indicator

**Skip option**: ‚úÖ Permitir saltar y explorar

#### 4. Dashboard Principal
**Objetivo**: Overview r√°pido del estado actual

**Informaci√≥n cr√≠tica** (above the fold):
- [M√©trica #1]
- [M√©trica #2]
- [Acci√≥n primaria - CTA grande]

**Progressive disclosure**: Mostrar detalles on-demand, no todo junto

**Estados**:
- Empty state (sin datos)
- Loading
- Populated (con datos)
- Error

**Empty State Design**:
- Mensaje amigable explicando qu√© hacer
- CTA claro para primera acci√≥n
- Imagen/ilustraci√≥n

#### 5. [Feature Principal - Pantalla]
[DESCRIBIR PANTALLA DEL FEATURE M√ÅS IMPORTANTE]

### Componentes Reutilizables Clave

- [ ] Buttons (primary, secondary, ghost, destructive)
- [ ] Inputs (text, email, password, textarea)
- [ ] Select/Dropdown
- [ ] Modal/Dialog
- [ ] Toast notifications
- [ ] Loading states (skeleton, spinner)
- [ ] Empty states
- [ ] Error states
- [ ] Cards
- [ ] Tables (responsive)

---

## Non-Functional Requirements

### Performance

**Targets**:
- ‚ö° **First Contentful Paint (FCP)**: < 1.5s
- ‚ö° **Largest Contentful Paint (LCP)**: < 2.5s
- ‚ö° **Time to Interactive (TTI)**: < 3.5s
- ‚ö° **Cumulative Layout Shift (CLS)**: < 0.1
- ‚ö° **First Input Delay (FID)**: < 100ms
- ‚ö° **API response time (p95)**: < 500ms
- ‚ö° **Core Web Vitals**: Todo en verde

**Estrategias**:
- Server Components por defecto
- Code splitting autom√°tico (Next.js)
- Image optimization (next/image)
- Lazy loading de componentes pesados
- Caching agresivo

### Scalability

**Targets**:
- üë• **Soportar 1,000 usuarios concurrentes** (MVP)
- üë• **Arquitectura lista para 10,000 usuarios** (Mes 6)
- üíæ **Database**: Preparada para millones de registros
- üìä **APIs**: Rate limiting configurado

**Estrategias**:
- Supabase connection pooling
- Redis/Upstash para caching
- CDN para assets est√°ticos
- Horizontal scaling en Vercel

### Security

**Requirements**:
- üîí **Encriptaci√≥n**: Datos sensibles encriptados en DB
- üîë **Auth**: JWT tokens con refresh mechanism
- üõ°Ô∏è **Input validation**: Zod en todos los Server Actions
- üö´ **Rate limiting**: Por IP y por usuario
- üîê **2FA**: Opcional desde d√≠a 1
- üìú **OWASP Top 10**: Compliance completo

**Checklist**:
- [ ] RLS policies en todas las tablas
- [ ] Validaci√≥n server-side siempre
- [ ] Secrets en environment variables
- [ ] HTTPS enforced
- [ ] CSP headers configurados
- [ ] CORS apropiado

### Accessibility

**Targets**:
- ‚ôø **WCAG 2.1 AA compliance**
- üì± **Mobile-first responsive**
- ‚å®Ô∏è **Navegaci√≥n completa por teclado**
- üé® **Contraste de colores suficiente**
- üì¢ **Screen reader friendly**

**Testing**:
- Lighthouse accessibility audit > 90
- Manual testing con screen readers
- Keyboard-only navigation testing

### Monitoring & Analytics

**M√©tricas a trackear**:
- **User behavior**: Page views, clicks, time on page
- **Performance**: Web Vitals en producci√≥n
- **Errors**: Error tracking en tiempo real
- **Business**: Conversiones, churn, MRR

**Tools**:
- Vercel Analytics / Google Analytics
- Sentry para error tracking
- PostHog / Mixpanel para product analytics

---

## Monetization

### Modelo de Precios: {{PRICING_MODEL}}

#### üÜì Plan Free

**L√≠mites**:
- [X operaciones/mes]
- [Features b√°sicas]
- [Limitaci√≥n de storage]
- Support: Community only

**Objetivo**: Conversi√≥n a pago del 5-10%

#### üí∞ Plan Pro (${{MVP_PRICE}}/mes o $[ANUAL CON DESCUENTO]/a√±o)

**Incluye**:
- ‚úÖ Todo lo del plan Free
- ‚úÖ [L√≠mite extendido o ilimitado]
- ‚úÖ [Features avanzadas]
- ‚úÖ [Priority support]
- ‚úÖ [Integraciones adicionales]

**Target**: Indie hackers, small teams

#### üè¢ Plan Enterprise (Custom pricing - desde $[PRECIO]/mes)

**Incluye**:
- ‚úÖ Todo lo del plan Pro
- ‚úÖ SLA garantizado
- ‚úÖ Custom integrations
- ‚úÖ Dedicated support
- ‚úÖ On-premise deployment option
- ‚úÖ Custom contracts

**Target**: Companies 100+ employees

### Unit Economics

**Targets**:
- **CAC (Customer Acquisition Cost)**: < $50
- **LTV (Lifetime Value)**: > $500 (asumiendo 12 meses retention)
- **LTV:CAC Ratio**: > 3:1
- **Payback period**: < 3 meses
- **Gross margin**: > 80%

### MRR Goals

- **Mes 1**: $100 (1-2 usuarios pagando)
- **Mes 3**: $500 (5-10 usuarios pagando)
- **Mes 6**: $2,000 (20-40 usuarios pagando)
- **A√±o 1**: $10,000 MRR

### Estrategia de Descuentos

- **Pago anual**: 20% de descuento
- **Early adopters**: 50% off por 6 meses
- **Students**: 50% off
- **Non-profits**: 30% off

---

## Technical Architecture

### Database Schema (Supabase PostgreSQL)

```sql
-- Users/Profiles table (extends Supabase auth.users)
CREATE TABLE profiles (
  id UUID REFERENCES auth.users PRIMARY KEY,
  full_name TEXT NOT NULL,
  email TEXT UNIQUE NOT NULL,
  company TEXT,
  avatar_url TEXT,
  subscription_tier TEXT DEFAULT 'free' CHECK (subscription_tier IN ('free', 'pro', 'enterprise')),
  subscription_status TEXT DEFAULT 'inactive',
  stripe_customer_id TEXT,
  created_at TIMESTAMPTZ DEFAULT NOW(),
  updated_at TIMESTAMPTZ DEFAULT NOW()
);

-- Core entity table (ejemplo)
CREATE TABLE [projects] (
  id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  user_id UUID REFERENCES profiles(id) ON DELETE CASCADE,
  name TEXT NOT NULL,
  description TEXT,
  status TEXT DEFAULT 'active',
  metadata JSONB,
  created_at TIMESTAMPTZ DEFAULT NOW(),
  updated_at TIMESTAMPTZ DEFAULT NOW()
);

-- Indexes
CREATE INDEX idx_projects_user_id ON projects(user_id);
CREATE INDEX idx_projects_status ON projects(status);

-- Row Level Security (RLS)
ALTER TABLE profiles ENABLE ROW LEVEL SECURITY;
ALTER TABLE projects ENABLE ROW LEVEL SECURITY;

-- RLS Policies
CREATE POLICY "Users can view own profile"
  ON profiles FOR SELECT
  USING (auth.uid() = id);

CREATE POLICY "Users can update own profile"
  ON profiles FOR UPDATE
  USING (auth.uid() = id);

CREATE POLICY "Users can view own projects"
  ON projects FOR SELECT
  USING (auth.uid() = user_id);

CREATE POLICY "Users can create own projects"
  ON projects FOR INSERT
  WITH CHECK (auth.uid() = user_id);

-- Triggers para updated_at
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
  NEW.updated_at = NOW();
  RETURN NEW;
END;
$$ language 'plpgsql';

CREATE TRIGGER update_profiles_updated_at
  BEFORE UPDATE ON profiles
  FOR EACH ROW
  EXECUTE PROCEDURE update_updated_at_column();
```

### API Structure

```
src/app/api/
‚îú‚îÄ‚îÄ auth/
‚îÇ   ‚îú‚îÄ‚îÄ callback/route.ts        # OAuth callback
‚îÇ   ‚îî‚îÄ‚îÄ signout/route.ts         # Sign out endpoint
‚îú‚îÄ‚îÄ webhook/
‚îÇ   ‚îú‚îÄ‚îÄ stripe/route.ts          # Stripe webhooks
‚îÇ   ‚îî‚îÄ‚îÄ mercadopago/route.ts     # MercadoPago webhooks
‚îú‚îÄ‚îÄ [entity]/
‚îÇ   ‚îú‚îÄ‚îÄ route.ts                 # CRUD operations
‚îÇ   ‚îî‚îÄ‚îÄ [id]/route.ts            # Single entity operations
‚îî‚îÄ‚îÄ health/route.ts              # Health check
```

### Third-Party Services

| Service | Purpose | Free Tier | Paid Plan |
|---------|---------|-----------|-----------|
| Supabase | Database + Auth | 500MB, 2GB bandwidth | $25/mo |
| Vercel | Hosting | 100GB bandwidth | $20/mo |
| Stripe | Payments (global) | Free | 2.9% + $0.30 |
| MercadoPago | Payments (LATAM) | Free | ~4-6% |
| Resend | Emails | 3k emails/mo | $20/mo |
| OpenAI | AI features | - | Pay as you go |

---

## Success Metrics

### üìä User Metrics (Product)

**Activation**:
- Signup ‚Üí First value: < 2 minutos
- Activation rate: > 40%

**Engagement**:
- Daily Active Users (DAU)
- Weekly Active Users (WAU)
- DAU/MAU ratio: > 20%
- Feature adoption rate

**Retention**:
- Day 1 retention: > 40%
- Day 7 retention: > 20%
- Day 30 retention: > 10%

**Satisfaction**:
- Net Promoter Score (NPS): > 40
- Customer Satisfaction (CSAT): > 80%

### üí∞ Business Metrics

**Revenue**:
- Monthly Recurring Revenue (MRR)
- Annual Recurring Revenue (ARR)
- Average Revenue Per User (ARPU)

**Growth**:
- MRR growth rate: > 20% month-over-month
- User growth rate: > 30% month-over-month
- Viral coefficient (K-factor): > 1.0

**Efficiency**:
- Customer Acquisition Cost (CAC): < $50
- Lifetime Value (LTV): > $500
- LTV:CAC ratio: > 3:1
- Churn rate: < 5% monthly

### üîß Technical Metrics

**Performance**:
- Uptime: 99.9% (objetivo)
- Error rate: < 1%
- API response time (p95): < 500ms
- Build time: < 2 minutos

**Quality**:
- Test coverage: > 80%
- TypeScript strict mode: ‚úÖ
- Zero critical security vulnerabilities

---

## Launch Strategy

### Fase 1: MVP Alpha (Semana 1-2)

**Objetivos**:
- [ ] Core features completas
- [ ] 0 bugs cr√≠ticos
- [ ] Performance targets alcanzados
- [ ] Testing interno completo

**Actividades**:
- Desarrollo full-time
- Daily standups
- Testing continuo

### Fase 2: Closed Beta (Semana 3)

**Objetivos**:
- [ ] 5-10 usuarios alpha testeando
- [ ] Feedback documentado
- [ ] Bugs priorizados y resueltos
- [ ] Pricing validado

**Actividades**:
- Invitar early adopters (red personal)
- Daily check-ins con alpha users
- Iterar basado en feedback

### Fase 3: Public Beta (Semana 4)

**Objetivos**:
- [ ] 50-100 usuarios beta
- [ ] Primeros usuarios pagando
- [ ] MVP s√≥lido y estable
- [ ] Infraestructura escalando bien

**Actividades**:
- Launch en Product Hunt
- Post en Reddit (r/SaaS, r/entrepreneur)
- Twitter/LinkedIn announcements

### Fase 4: Soft Launch (Mes 1-2)

**Objetivos**:
- [ ] 500 usuarios objetivo
- [ ] $500 MRR
- [ ] M√©tricas de engagement saludables
- [ ] Content marketing iniciado

**Actividades**:
- SEO content
- Case studies
- Partnerships

---

## Competitive Analysis

### Competidores Directos

#### [Competidor #1]
- **Fortaleza**: [Qu√© hacen bien]
- **Debilidad**: [Qu√© les falta]
- **Pricing**: $X/mes
- **Diferenciaci√≥n nuestra**: [C√≥mo somos mejor]

#### [Competidor #2]
...

### Competidores Indirectos

[Soluciones alternativas que no son software]

---

## Riesgos y Mitigaciones

| Riesgo | Probabilidad | Impacto | Mitigaci√≥n |
|--------|--------------|---------|------------|
| L√≠mites de API excedidos | Alta | Alto | Caching agresivo, plan de escalamiento |
| Competencia nueva | Media | Alto | Lanzar r√°pido, construir moat con datos |
| Problemas de escalabilidad | Baja | Alto | Arquitectura preparada, monitoring |
| Churn alto | Media | Alto | Onboarding s√≥lido, customer success |
| Regulaciones (GDPR, etc.) | Baja | Medio | Legal review, compliance desde d√≠a 1 |

---

## Open Questions / Decisions Needed

- [ ] ¬øPrecio √≥ptimo validado con usuarios?
- [ ] ¬øQu√© integraciones son prioritarias post-MVP?
- [ ] ¬øEstrategia de contenido/SEO definida?
- [ ] ¬øPartnership opportunities identificadas?
- [ ] ¬øPlan de customer support (chatbot, email, etc.)?

---

## Appendix

### User Research Notes
[LINKS A ENTREVISTAS, ENCUESTAS, ETC.]

### Design Mockups
[LINKS A FIGMA, DISE√ëOS, ETC.]

### Market Research
[LINKS A ESTUDIOS DE MERCADO]

---

**Documento vivo - actualizar semanalmente**
**Owner**: [TU NOMBRE]
**√öltima revisi√≥n**: {{TIMESTAMP}}
